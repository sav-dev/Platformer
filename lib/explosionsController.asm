;****************************************************************
; PlayerController                                              ;
; Responsible for player's movement and graphics                ;
;****************************************************************

;****************************************************************
; Name:                                                         ;
;   RenderExplosion                                             ;
;                                                               ;
; Description:                                                  ;
;   Renders an explosion                                        ;
;                                                               ;
; Input variables:                                              ;
;   Explosion vars                                              ;
;                                                               ;
; Used variables:                                               ;
;   Y                                                           ;
;   b                                                           ;
;   c                                                           ;
;   d                                                           ;
;   e                                                           ;
;   h                                                           ;
;   i                                                           ;
;****************************************************************

RenderExplosion:  

  .setPositionPointers:  
    LDA explosionFrame
    CMP #$04                        ; 4th frame is really the 1st frame
    BEQ .firstFrame                 
                                    
  .notFirstFrame:                   
    LDA #LOW(explosionYOffRest)     
    STA b                           
    LDA #HIGH(explosionYOffRest)      
    STA c                           
    LDA #LOW(explosionXOffRest)     
    STA h                           
    LDA #HIGH(explosionXOffRest)      
    STA i                           
    JMP .setTilePointer             
                                    
  .firstFrame:                      
    LDA #LOW(explosionYOff1st)      
    STA b                           
    LDA #HIGH(explosionYOff1st)      
    STA c                           
    LDA #LOW(explosionXOff1st)     
    STA h                           
    LDA #HIGH(explosionXOff1st)      
    STA i                           
                                    
  .setTilePointer:                  
    LDA #LOW(explosionTiles)        
    STA d                           
    LDA #HIGH(explosionTiles)       
    STA e                           
    LDX explosionFrame              ; X = animation frame             
    DEX                             ; X = animation frame - 1 (so for frame 1 there is no offset etc)
    BEQ .render                     
    LDA #$00                        
    .movePointerLoop:               
      CLC                           
      ADC #EXPLOSION_SPRITES_COUNT   
      DEX                           
      BNE .movePointerLoop          ; after loop A = 4 * (frame - 1)
    CLC                             
    ADC d                           
    STA d                           ; move pointer
    BCC .render                     
    INC e                           ; handle carry
    JMP .render                     
                                    
  .render:                          
                                    
    ; once we get here              
    ;   b+c points to y off table   
    ;   d+e points to tiles table   
    ;   h+i points to x off table   
    ;   atts are constant           
                                    
    LDY #EXPLOSION_SPRITES_COUNT    
    .renderTileLoop:                
      DEY                           
      LDA [b], y                    
      CLC                           
      ADC explosionY                   
      STA renderYPos                
      LDA [d], y                    
      STA renderTile                
      LDA #EXPLOSION_ATTS                   
      STA renderAtts          
      ; todo: handle explosionOffScreen
      LDA [h], y                    
      CLC                           
      ADC explosionX                   
      STA renderXPos                
      JSR RenderSprite              
      .loopCheck:                   
        TYA
        BNE .renderTileLoop         
        RTS                         

;****************************************************************
; ATTS for explosion are currently constant for each tile       ;
;****************************************************************

EXPLOSION_ATTS = $00
        
;****************************************************************
; Lookup tables generated by the tool below                     ;
;****************************************************************
  
explosionXOff1st:
  .byte $05, $00, $00, $00
explosionXOffRest:
  .byte $00, $08, $00, $08
explosionYOff1st:
  .byte $04, CLEAR_SPRITE, CLEAR_SPRITE, CLEAR_SPRITE
explosionYOffRest:
  .byte $00, $00, $08, $08
explosionTiles:
  .byte $22, $23, $24, $25
  .byte $1E, $1F, $20, $21
  .byte $1A, $1B, $1C, $1D
  .byte $19, CLEAR_SPRITE, CLEAR_SPRITE, CLEAR_SPRITE

